#!/bin/bash

# This script scans all files within the current directory and renames them all so that they conform to the pattern <yyyy><mm><dd>_<HH><MM><SS>.<extension>
# It deals with JPGs, PNGs, MOVs and MP4s. For JPEGs, it uses for the rename the date/time from the EXIF metadata, if any.
# It also handles the situation where more than one photo could have been taken at the exact same date/time, avoiding accidental overrides due to name collisions.
#
# Usage: rename (no arguments)

function secureRename {
  source=$1
  dest=$2
  dest_basename=${dest%.*}
  dest_ext=${dest##*.}

  if [[ ! -e "$dest_basename.$dest_ext" ]]; then
      # file does not exist in the destination directory
      mv -v -- "$source" "$dest"
  else
      # Look for a unique name
      num=2
      while [[ -e "$dest_basename$num.$dest_ext" ]]; do
          (( num++ ))
      done
      mv -v -- "$source" "$dest_basename-$num.$dest_ext" 
  fi
}

function extensionInLowerCase {
  f=$1;
  return `echo "${f##*.}" | tr '[:upper:]' '[:lower:]'`;
}

# (Only for images) Set file's last modified date and rename all files according to what's in the EXIF field
jhead -q -ft -n%Y%m%d_%H%M%S `ls -- {*.jpg,*.JPG} 2>/dev/null`

# Rename MOV and PNG files according to their last modified date timestamp
for f in `ls *.mov *.MOV *.png *.PNG 2>/dev/null` ; do
  if [ -f "$f" ]
    then
      timestamp=`stat -f "%Sm" -t "%Y%m%d_%H%M%S" "${f}"`;
      extInLowerCase=`echo "${f##*.}" | tr '[:upper:]' '[:lower:]'`;
      secureRename "$f" "$timestamp".$extInLowerCase
  fi
done

# Touch last modified timestamps in all MP4 files
for f in `ls *.mp4 *.MP4 2>/dev/null` ; do
  if [ -f "$f" ]
    then
      if [[ $f == P* ]] || [[ $f == IMG_* ]]
        then
          # Deal with photos created by Panasonic cameras
          # TODO Extract this behavior to a function as this is the same as above

          timestamp=`stat -f "%Sm" -t "%Y%m%d_%H%M%S" "${f}"`;
          extInLowerCase=`echo "${f##*.}" | tr '[:upper:]' '[:lower:]'`;
          secureRename "$f" "$timestamp".$extInLowerCase

      else
          fileNameWithoutExtension="${f%.*}"

          # Translate from file's name format to the one accepted by "touch"
          timestamp=`date -j -f "%Y%m%d_%H%M%S" $f "+%Y%m%d%H%M.%S"`;

          # Touch file's last modified date to reflect the actual date/time the video was taken
          touch -t "$timestamp" "$f"
      fi
  fi
done
